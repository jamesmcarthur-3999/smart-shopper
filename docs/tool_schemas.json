{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "tools": {
    "serpapi_search": {
      "description": "Search for products using SerpAPI's Google Shopping interface",
      "parameters": {
        "type": "object",
        "required": ["query"],
        "properties": {
          "query": {
            "type": "string",
            "description": "The search query for Google Shopping"
          },
          "num_results": {
            "type": "integer",
            "description": "Number of results to return",
            "default": 10
          },
          "fields": {
            "type": "string",
            "description": "Comma-separated list of fields to include in the response",
            "default": "price,title,img_url,source,link"
          },
          "no_cache": {
            "type": "boolean",
            "description": "If true, bypass cache and fetch fresh results",
            "default": false
          }
        }
      }
    },
    "search1_query": {
      "description": "Query the Search1 product index using ElasticSearch-like syntax",
      "parameters": {
        "type": "object",
        "required": ["q"],
        "properties": {
          "q": {
            "type": "string",
            "description": "The search query text"
          },
          "filters": {
            "type": "object",
            "description": "Filter conditions to apply",
            "additionalProperties": true
          },
          "facets": {
            "type": "array",
            "description": "Facet fields to return",
            "items": {
              "type": "string"
            }
          },
          "boost": {
            "type": "object",
            "description": "Field boosting configuration",
            "properties": {
              "field": {
                "type": "string",
                "description": "Field name to boost"
              },
              "factor": {
                "type": "number",
                "description": "Boost factor"
              }
            },
            "required": ["field", "factor"]
          }
        }
      }
    },
    "perplexity_search": {
      "description": "Enrich product data with contextual information from Perplexity",
      "parameters": {
        "type": "object",
        "required": ["query"],
        "properties": {
          "query": {
            "type": "string",
            "description": "The search query"
          },
          "model": {
            "type": "string",
            "description": "Perplexity model to use",
            "enum": ["sonar-small-online", "sonar-medium-online", "sonar-large-online"],
            "default": "sonar-small-online"
          },
          "context_size": {
            "type": "string",
            "description": "Amount of context to include",
            "enum": ["small", "medium", "large"],
            "default": "medium"
          },
          "domain_filter": {
            "type": "array",
            "description": "List of domains to include/exclude",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "multi_source_search": {
      "description": "Search across multiple product sources simultaneously",
      "parameters": {
        "type": "object",
        "required": ["query"],
        "properties": {
          "query": {
            "type": "string",
            "description": "The search query"
          },
          "sources": {
            "type": "array",
            "description": "List of sources to search (default: all)",
            "items": {
              "type": "string",
              "enum": ["serpapi", "search1", "perplexity"]
            }
          },
          "max_results": {
            "type": "integer",
            "description": "Maximum number of results to return",
            "default": 20
          },
          "sort_by": {
            "type": "string",
            "description": "Sort results by this field",
            "enum": ["relevance", "price_asc", "price_desc", "rating"],
            "default": "relevance"
          }
        }
      }
    }
  }
}
