{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "tools": {
    "serpapi_search": {
      "description": "Search for products using SerpAPI's Google Shopping interface",
      "parameters": {
        "type": "object",
        "required": ["query"],
        "properties": {
          "query": {
            "type": "string",
            "description": "The search query for Google Shopping"
          },
          "num_results": {
            "type": "integer",
            "description": "Number of results to return",
            "default": 10
          },
          "fields": {
            "type": "string",
            "description": "Comma-separated list of fields to include in the response",
            "default": "price,title,img_url,source,link"
          },
          "no_cache": {
            "type": "boolean",
            "description": "If true, bypass cache and fetch fresh results",
            "default": false
          }
        }
      }
    },
    "search1_query": {
      "description": "Query the Search1 product index using ElasticSearch-like syntax",
      "parameters": {
        "type": "object",
        "required": ["q"],
        "properties": {
          "q": {
            "type": "string",
            "description": "The search query text"
          },
          "filters": {
            "type": "object",
            "description": "Filter conditions to apply",
            "additionalProperties": true
          },
          "facets": {
            "type": "array",
            "description": "Facet fields to return",
            "items": {
              "type": "string"
            }
          },
          "boost": {
            "type": "object",
            "description": "Field boosting configuration",
            "properties": {
              "field": {
                "type": "string",
                "description": "Field name to boost"
              },
              "factor": {
                "type": "number",
                "description": "Boost factor"
              }
            },
            "required": ["field", "factor"]
          }
        }
      }
    },
    "perplexity_search": {
      "description": "Enrich product data with contextual information from Perplexity",
      "parameters": {
        "type": "object",
        "required": ["query"],
        "properties": {
          "query": {
            "type": "string",
            "description": "The search query"
          },
          "model": {
            "type": "string",
            "description": "Perplexity model to use",
            "enum": ["sonar-small-online", "sonar-medium-online", "sonar-large-online"],
            "default": "sonar-small-online"
          },
          "context_size": {
            "type": "string",
            "description": "Amount of context to include",
            "enum": ["small", "medium", "large"],
            "default": "medium"
          },
          "domain_filter": {
            "type": "array",
            "description": "List of domains to include/exclude",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "multi_source_search": {
      "description": "Search across multiple product sources simultaneously",
      "parameters": {
        "type": "object",
        "required": ["query"],
        "properties": {
          "query": {
            "type": "string",
            "description": "The search query"
          },
          "sources": {
            "type": "array",
            "description": "List of sources to search (default: all)",
            "items": {
              "type": "string",
              "enum": ["serpapi", "search1", "perplexity"]
            }
          },
          "max_results": {
            "type": "integer",
            "description": "Maximum number of results to return",
            "default": 20
          },
          "sort_by": {
            "type": "string",
            "description": "Sort results by this field",
            "enum": ["relevance", "price_asc", "price_desc", "rating"],
            "default": "relevance"
          }
        }
      }
    },
    "canvas_ops": {
      "description": "Execute operations on the product canvas display",
      "parameters": {
        "type": "object",
        "required": ["op"],
        "properties": {
          "op": {
            "type": "string",
            "description": "Operation type",
            "enum": ["add_card", "update_grid", "highlight_choice", "undo_last"]
          }
        },
        "allOf": [
          {
            "if": {
              "properties": { "op": { "const": "add_card" } }
            },
            "then": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique ID for the product card"
                },
                "title": {
                  "type": "string",
                  "description": "Product title"
                },
                "price": {
                  "type": "string",
                  "description": "Product price (formatted)"
                },
                "img_url": {
                  "type": "string",
                  "description": "URL to product image"
                },
                "source": {
                  "type": "string",
                  "description": "Source of the product data"
                },
                "link": {
                  "type": "string",
                  "description": "URL to product details"
                },
                "rating": {
                  "type": "number",
                  "description": "Product rating (0-5)"
                },
                "reviews_count": {
                  "type": "integer",
                  "description": "Number of reviews"
                },
                "description": {
                  "type": "string",
                  "description": "Product description"
                },
                "metadata": {
                  "type": "object",
                  "description": "Additional product metadata",
                  "additionalProperties": true
                }
              },
              "required": ["id", "title", "price", "source"]
            }
          },
          {
            "if": {
              "properties": { "op": { "const": "update_grid" } }
            },
            "then": {
              "properties": {
                "items": {
                  "type": "array",
                  "description": "Array of product IDs to display",
                  "items": {
                    "type": "string"
                  }
                },
                "layout": {
                  "type": "object",
                  "description": "Grid layout configuration",
                  "properties": {
                    "columns": {
                      "type": "integer",
                      "description": "Number of columns in the grid"
                    },
                    "rows": {
                      "type": "integer",
                      "description": "Number of rows (optional)"
                    },
                    "gap": {
                      "type": "string",
                      "description": "CSS gap value (e.g., '1rem')"
                    },
                    "itemWidth": {
                      "type": "string",
                      "description": "CSS width value for items"
                    },
                    "itemHeight": {
                      "type": "string",
                      "description": "CSS height value for items"
                    }
                  },
                  "required": ["columns"]
                }
              },
              "required": ["items"]
            }
          },
          {
            "if": {
              "properties": { "op": { "const": "highlight_choice" } }
            },
            "then": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the product to highlight"
                },
                "reason": {
                  "type": "string",
                  "description": "Reason for highlighting this product"
                }
              },
              "required": ["id"]
            }
          },
          {
            "if": {
              "properties": { "op": { "const": "undo_last" } }
            },
            "then": {
              "properties": {
                "n": {
                  "type": "integer",
                  "description": "Number of operations to undo",
                  "default": 1
                }
              }
            }
          }
        ]
      }
    },
    "claude_assist": {
      "description": "Get intelligent shopping assistance from Claude AI",
      "parameters": {
        "type": "object",
        "required": ["query"],
        "properties": {
          "query": {
            "type": "string",
            "description": "The user's shopping query"
          },
          "products": {
            "type": "array",
            "description": "Product data from search results",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "title": { "type": "string" },
                "price": { "type": "string" },
                "source": { "type": "string" },
                "img_url": { "type": "string" },
                "link": { "type": "string" },
                "rating": { "type": "number" },
                "reviews_count": { "type": "integer" }
              }
            }
          },
          "enrichment": {
            "type": "array",
            "description": "Enrichment data from Perplexity",
            "items": {
              "type": "object",
              "properties": {
                "topic": { "type": "string" },
                "content": { "type": "string" },
                "sources": { 
                  "type": "array",
                  "items": { "type": "string" }
                }
              }
            }
          },
          "context": {
            "type": "object",
            "description": "Additional context for Claude",
            "additionalProperties": true
          }
        }
      }
    }
  }
}